"""–ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–∂–∏–º–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ —á–∞—Ç—É GPT"""

import services.gpt as gpt
from services.logger import logger


def ask(prompt):
    """
    Sends a question to the GPT service and returns the response.

    Args:
        prompt (str): The user's question to be sent to the GPT service.

    Returns:
        str: The response from the GPT service, or an error message if the request fails.
    """

    request = [
        {
            "role": "system",
            "content": "–¢—ã –∑–Ω–∞—Ç–æ–∫ –≤—Å–µ–≥–æ, –∫–æ—Ç–æ—Ä—ã–π —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.",
        },
        {"role": "user", "content": prompt},
    ]
    logger.info("–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
    try:
        response = gpt.ask_gpt(request)
        logger.info("–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω")
        return response
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞ –æ—Ç OpenAI: {e}")
        return "üòï–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ–∑–∂–µ!"
