"""–ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–∂–∏–º–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤"""

import services.gpt as gpt
from services.logger import logger


def fact():
    """
    Gets a random fact from the GPT service.

    Returns:
        str: The response from the GPT service, or an error message if the request fails.
    """
    with open("prompt/random_system.txt", "r", encoding="utf-8") as f:
        prompt_system = f.read()
        logger.info("System –ø—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
    with open("prompt/random_user.txt", "r", encoding="utf-8") as f:
        prompt = f.read()
        logger.info("–ü—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
    request = [
        {"role": "system", "content": prompt_system},
        {"role": "user", "content": prompt},
    ]
    logger.info("–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
    try:
        response = gpt.ask_gpt(request)
        logger.info("–§–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω")
        return response
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞ –æ—Ç OpenAI: {e}")
        return (
            "üòï–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!"
        )
