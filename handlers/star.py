"""–ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–∂–∏–º–∞ –¥–∏–∞–ª–æ–≥–æ–≤ —Å –∑–≤–µ–∑–¥–∞–º–∏"""

import services.gpt as gpt
from services.logger import logger

STARS = ["–î–∂–æ–Ω–Ω–∏ –î–µ–ø–ø", "–î–∂–µ–Ω–∏—Ñ–µ—Ä –õ–æ—É—Ä–µ–Ω—Å", "–†–æ–±–µ—Ä—Ç –î–∞—É–Ω–∏ –º–ª.", "–•–ª–æ—è –ì—Ä–µ–π—Å –ú–æ—Ä–µ—Ü"]
INDEX_SHIFT = 31


def startDialog(mode):
    """
    Initiates a dialog as a celebrity.

    This function sends a request to the GPT service to start a conversation as a selected celebrity
    based on the provided mode.

    Args:
        mode (int): The index of the celebrity in the STARS list. It should match the respective
                    celebrity's index adjusted by INDEX_SHIFT.

    Returns:
        str: The initial response from the GPT service as the celebrity, or an error message if the
             request fails.
    """

    request = [
        {
            "role": "system",
            "content": f"–¢—ã {STARS[mode - INDEX_SHIFT]}! –ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫–∞ –∏ —Ç—ã —Ö–æ—á–µ—à—å —Å –Ω–∏–º –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å.",
        },
        {"role": "user", "content": f"–ù–∞—á–Ω–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä –∫–∞–∫ {STARS[mode - INDEX_SHIFT]}."},
    ]
    logger.info("–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
    try:
        response = gpt.ask_gpt(request)
        logger.info("–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω")
        return response
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞ –æ—Ç OpenAI: {e}")
        return "üòï–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –±–µ—Å–µ–¥—É –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–π—Ç–∏ –ø–æ–∑–∂–µ!"


def dialog(mode, prompt):
    """
    Continues a dialog as a celebrity.

    This function sends a request to the GPT service to continue a conversation as a selected celebrity
    based on the provided mode.

    Args:
        mode (int): The index of the celebrity in the STARS list. It should match the respective
                    celebrity's index adjusted by INDEX_SHIFT.
        prompt (str): The message to send to the GPT service to continue the dialog.

    Returns:
        str: The response from the GPT service as the celebrity, or an error message if the
             request fails.
    """

    request = [
        {
            "role": "system",
            "content": f"–¢—ã {STARS[mode - 31]}! –ü—Ä–æ–¥–æ–ª–∂–∏ –±–µ—Å–µ–¥—É, –∫–∞–∫ {STARS[mode - INDEX_SHIFT]}!",
        },
        {"role": "user", "content": prompt},
    ]
    logger.info("–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
    try:
        response = gpt.ask_gpt(request)
        logger.info("–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω")
        return response
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenAI: {e}")
        return "üòï–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ–∑–∂–µ!"
